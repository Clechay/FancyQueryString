"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const relations_translations = [
    { code: "=", meaning: "equal" },
    { code: "~=", meaning: "fuzzyEqual" },
    { code: "<=", meaning: "lessOrEqual" },
    { code: "<", meaning: "lessThan" },
    { code: ">=", meaning: "moreOrEqual" },
    { code: ">", meaning: "moreThan" },
    { code: "!=", meaning: "notEqual" },
];
exports.relations = {
    codes: relations_translations.map(o => o.code),
    meanings: relations_translations.map(o => o.meaning),
    translations: relations_translations,
};
exports.charsets = {
    relation: "~=<>!".split(""),
    digits: "0123456789".split(""),
    value_wrapper: `'"`.split(""),
    separator: ' ',
    alphabet: {
        eng: {
            lower: "abcdefghijklmnopqrstuvwxyz".split(""),
            upper: [""],
            all: [""],
        },
        pol: {
            lower: "ąćęłńóśżź".split(""),
            upper: [""],
            all: [""],
        },
        combined: {
            lower: [""],
            upper: [""],
            all: [""],
        }
    },
    id: [""],
    value: {
        naked: [""],
        wraped: [""]
    }
};
{
    exports.charsets.alphabet.eng.upper = exports.charsets.alphabet.eng.lower.map(c => c.toUpperCase());
    exports.charsets.alphabet.eng.all = [...exports.charsets.alphabet.eng.upper, ...exports.charsets.alphabet.eng.lower];
    exports.charsets.alphabet.pol.upper = exports.charsets.alphabet.pol.lower.map(c => c.toUpperCase());
    exports.charsets.alphabet.pol.all = [...exports.charsets.alphabet.pol.upper, ...exports.charsets.alphabet.pol.lower];
    exports.charsets.alphabet.combined.lower = [...exports.charsets.alphabet.eng.lower, ...exports.charsets.alphabet.pol.lower];
    exports.charsets.alphabet.combined.upper = [...exports.charsets.alphabet.eng.upper, ...exports.charsets.alphabet.pol.upper];
    exports.charsets.alphabet.combined.all = [...exports.charsets.alphabet.eng.all, ...exports.charsets.alphabet.pol.all];
    exports.charsets.id = [...exports.charsets.alphabet.eng.all, "_"];
    exports.charsets.value = {
        naked: [...exports.charsets.id, ...exports.charsets.digits, ...exports.charsets.alphabet.combined.all, "-"],
        wraped: [" "]
    };
    exports.charsets.value.wraped = [...exports.charsets.value.naked, " "];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU0sc0JBQXNCLEdBQUU7SUFDN0IsRUFBQyxJQUFJLEVBQUMsR0FBRyxFQUFHLE9BQU8sRUFBQyxPQUFPLEVBQUM7SUFDNUIsRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFHLE9BQU8sRUFBQyxZQUFZLEVBQUM7SUFDbEMsRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBQyxhQUFhLEVBQUM7SUFDbEMsRUFBQyxJQUFJLEVBQUMsR0FBRyxFQUFHLE9BQU8sRUFBQyxVQUFVLEVBQUM7SUFDL0IsRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBQyxhQUFhLEVBQUM7SUFDbEMsRUFBQyxJQUFJLEVBQUMsR0FBRyxFQUFHLE9BQU8sRUFBQyxVQUFVLEVBQUM7SUFDL0IsRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBQyxVQUFVLEVBQUM7Q0FDL0IsQ0FBQTtBQUVZLFFBQUEsU0FBUyxHQUFHO0lBQ3hCLEtBQUssRUFBRSxzQkFBc0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQzlDLFFBQVEsRUFBRSxzQkFBc0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO0lBQ3BELFlBQVksRUFBRSxzQkFBc0I7Q0FDcEMsQ0FBQTtBQUVZLFFBQUEsUUFBUSxHQUFHO0lBQ3ZCLFFBQVEsRUFBRyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztJQUM1QixNQUFNLEVBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7SUFDL0IsYUFBYSxFQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO0lBQzlCLFNBQVMsRUFBRyxHQUFHO0lBQ2YsUUFBUSxFQUFDO1FBQ1IsR0FBRyxFQUFDO1lBQ0gsS0FBSyxFQUFDLDRCQUE0QixDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDNUMsS0FBSyxFQUFDLENBQUMsRUFBRSxDQUFDO1lBQ1YsR0FBRyxFQUFDLENBQUMsRUFBRSxDQUFDO1NBQ1I7UUFDRCxHQUFHLEVBQUM7WUFDSCxLQUFLLEVBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDM0IsS0FBSyxFQUFDLENBQUMsRUFBRSxDQUFDO1lBQ1YsR0FBRyxFQUFDLENBQUMsRUFBRSxDQUFDO1NBQ1I7UUFDRCxRQUFRLEVBQUM7WUFDUixLQUFLLEVBQUMsQ0FBQyxFQUFFLENBQUM7WUFDVixLQUFLLEVBQUMsQ0FBQyxFQUFFLENBQUM7WUFDVixHQUFHLEVBQUMsQ0FBQyxFQUFFLENBQUM7U0FDUjtLQUNEO0lBQ0QsRUFBRSxFQUFDLENBQUMsRUFBRSxDQUFDO0lBQ1AsS0FBSyxFQUFDO1FBQ0wsS0FBSyxFQUFDLENBQUMsRUFBRSxDQUFDO1FBQ1YsTUFBTSxFQUFDLENBQUMsRUFBRSxDQUFDO0tBQ1g7Q0FDRCxDQUFBO0FBQ0Q7SUFDQyxnQkFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLGdCQUFRLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFFLENBQUM7SUFDdEYsZ0JBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsZ0JBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxHQUFHLGdCQUFRLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM3RixnQkFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLGdCQUFRLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFFLENBQUM7SUFDdEYsZ0JBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsZ0JBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxHQUFHLGdCQUFRLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUU3RixnQkFBUSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLENBQUMsR0FBRyxnQkFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLEdBQUcsZ0JBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3BHLGdCQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxHQUFHLGdCQUFRLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxnQkFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEcsZ0JBQVEsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsZ0JBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLGdCQUFRLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUU5RixnQkFBUSxDQUFDLEVBQUUsR0FBRyxDQUFDLEdBQUcsZ0JBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNsRCxnQkFBUSxDQUFDLEtBQUssR0FBRztRQUNoQixLQUFLLEVBQUcsQ0FBQyxHQUFHLGdCQUFRLENBQUMsRUFBRSxFQUFFLEdBQUcsZ0JBQVEsQ0FBQyxNQUFNLEVBQUUsR0FBRyxnQkFBUSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQztRQUNwRixNQUFNLEVBQUcsQ0FBQyxHQUFHLENBQUM7S0FDZCxDQUFBO0lBQ0QsZ0JBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsR0FBRyxnQkFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7Q0FDdkQifQ==